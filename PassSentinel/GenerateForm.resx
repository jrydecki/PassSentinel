<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAGADpAwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAQAAAAEAgGAAAAH/P/YQAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAADfklEQVQ4T02SW0yb
        ZRzGGxNnvHDZhfEUqzfGLDO6CHq1GEymuIs54jJWosvKsFZgq5zWZWwrla2jwx4oLSCjHT0g1JaSUgpd
        OxnnAh10wAqltrSlJ8thtMwL48XM48vXLvokv5v/93+e9/u+96E9UyN39aXWy/Fy2cXEHUllTC2qyiCp
        ySDam1VElGJOlCWpir6YtWUkKl95u7FiNWjSeTE/G8TSwzA8ixGsPIpTPHq4jsX5EFxOP7rb3bha7Pbx
        y5dfy9pptGusBdvERAyp9BPsPiHs7qJbMwal3IEO2SC6bg8jTZ6l0rvY2Ulj0LCIK8y5bsrM59j2Xy0d
        +ye5kcLWVgrb2ymoOn6D/d4ypLf6IRH0wWqahUo+hM3NHWxsPEYisQXu2bt/FxYa99GqGeP0m9WjiEWT
        SMQ3KeQ/9aNJZMH2zp/YfpyC+LoB0oZeyhiLbiCynkRdqQ0VBeYDtDKGnV7/gwOhtTjWw3/AuxzCt4xm
        nDslQ4t4CAqxFSWnm1B8UoKAP45wKIEg2a1lWcCkAgrsdF6ZDQFfBH6CoM4A54QXsfgWwuEkgqEkOXUT
        zsll1F/Ukp0ofl+NooZpehZgpteyLfB6wrAYJ2E1z6JLNYzZGS9qq9S4zOnEnMsHLfkvpp5xDJqnyc2E
        UXnGkAkoztfTuef6sORewy+qe7BbXfB5I1C12iAXm6GQWnGn7S41GzA58at2lFxpEOeLusDMUx+gMT7R
        0yvO6OGe8UPd7sCgaRqehRDpQwC8Gg14XB0ekG54FsIwdU+SQ4bxYDoA1slOFOQ17QV00s8zdJgeXUVH
        8xDM+inMz6zB7QqBV61F/aUuzJGAOTLTk250tjkwNeID88v2TEDBR630khNKjDk8MGjGoWg0Q8jrxcxE
        AOwiKdhfy+Ac81Mz0Q0TjLopjNhXUJSvQN5hEnDsHc4Lx3KFfw30zuP+kAdXLijRcE0PVYsd2vb75LOG
        oWxxQMg34hJHhbpKHfp6XPj8w4Y0n8Z/jmrj0fcaFWdPNGPA6Iajfwk9KvImtwYgFZghuWGG7KYFmp9H
        YOtbQhvpxjfH5Tj6vlBImfd06FDhviPv/nj7sxzBU9YpFUoZGoIWZUU6fH9aS9CAXahGyVdKfHpY8PTI
        wettubns57P2/3Tw5e9ez6FX5n/8Fvd4zv95I8ub1V988GrpK9l1IhrtXx8ChFIsx9NWAAAAAElFTkSu
        QmCC
</value>
  </data>
</root>